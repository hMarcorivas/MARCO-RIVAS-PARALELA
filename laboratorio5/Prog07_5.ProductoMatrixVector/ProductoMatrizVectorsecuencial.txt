# include  < iostream >
# include  < cstdlib >
# include  < ctime >

usando el  espacio de nombres  estándar ;

int  main ( int argc, char * argv []) {

	largo  	** A, // Matriz un multiplicador
			* x, // Vector que vamos a multiplicar
			* comprueba; // Guarda el resultado final (probado secuencialmente), su valor

	int n;
	if (argc <= 1 ) { // si no se pasa por parámetro el tamaño de la matriz,
					 // se coge por defecto el numero de procesadores
		cout << " Falta el tamanio de la matriz, por defecto cogemos 10 " << endl;
		n = 10 ;
	} más
		n = atoi (argv [ 1 ]);

	A = nuevo  largo * [n];       // reservamos espacio para las filas de la matriz.
	x = nuevo  largo [n];                    // reservamos espacio para el vector.

	// Rellena la matriz
	A [ 0 ] = nuevo  largo [n * n];
	for ( unsigned  int i = 1 ; i <n; i ++) {
		A [i] = A [i - 1 ] + n;
	}

	// Rellena A yx con valores aleatorios
	srand ( tiempo ( 0 ));
	cout << " La matriz y el vector generados son " << endl;
	for ( unsigned  int i = 0 ; i <n; i ++) {
		for ( unsigned  int j = 0 ; j <n; j ++) {
			si (j == 0 )
				cout << " [ " ;
			A [i] [j] = rand ()% 1000 ;
			cout << A [i] [j];
			si (j == n - 1 )
				cout << " ] " ;
			más
				cout << "   " ;
		}
		x [i] = rand ()% 100 ;
		cout << " \ t   [ " << x [i] << " ] " << endl;
	}
	cout << " \ n " ;

	comprueba = nuevo  largo [n];
	// Calculamos la multiplicacion secuencial para
	// despues de comprobar que es corregir la solucion.
	for ( unsigned  int i = 0 ; i <n; i ++) {
		comprueba [i] = 0 ;
		for ( unsigned  int j = 0 ; j <n; j ++) {
			comprueba [i] + = A [i] [j] * x [j];
		}
	}

	cout << " El resultado obtenido y el esperado son: " << endl;
	for ( unsigned  int i = 0 ; i <n; i ++) {
		cout << comprueba [i] << endl;
	}

	eliminar [] comprueba;
	eliminar [] A [ 0 ];

	eliminar [] x;
	eliminar [] A;

	devuelve  0 ;

}